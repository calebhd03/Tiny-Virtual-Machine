Starting compile: elf.txt
Done Compiling 
IM = [5, 5, 6, 7, 3, 2, 10, 0, 7, 0, 5, 5, 6, 7, 3, 0, 10, 0, 7, 0, 5, 5, 6, 7, 3, 1, 10, 0, 7, 0, 1, 3, 2, 0, 3, 3, 1, 1, 4, 2, 3, 1, 9, 0, 8, 15, 1, 3, 6, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

PC = 0 | A = 0 | DM = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
In <5>
Input keyboard: 1

PC = 2 | A = 1 | DM = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Out <7>
Result is 1

PC = 4 | A = 1 | DM = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Store <2>

PC = 6 | A = 1 | DM = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
SkipG <0>

PC = 10 | A = 1 | DM = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
In <5>
Input keyboard: 2

PC = 12 | A = 2 | DM = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
Out <7>
Result is 2

PC = 14 | A = 2 | DM = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
Store <0>

PC = 16 | A = 2 | DM = [2, 0, 1, 0, 0, 0, 0, 0, 0, 0]
SkipG <0>

PC = 20 | A = 2 | DM = [2, 0, 1, 0, 0, 0, 0, 0, 0, 0]
In <5>
Input keyboard: 3

PC = 22 | A = 3 | DM = [2, 0, 1, 0, 0, 0, 0, 0, 0, 0]
Out <7>
Result is 3

PC = 24 | A = 3 | DM = [2, 0, 1, 0, 0, 0, 0, 0, 0, 0]
Store <1>

PC = 26 | A = 3 | DM = [2, 3, 1, 0, 0, 0, 0, 0, 0, 0]
SkipG <0>

PC = 30 | A = 3 | DM = [2, 3, 1, 0, 0, 0, 0, 0, 0, 0]
Load <3>

PC = 32 | A = 0 | DM = [2, 3, 1, 0, 0, 0, 0, 0, 0, 0]
Add <0>

PC = 34 | A = 2 | DM = [2, 3, 1, 0, 0, 0, 0, 0, 0, 0]
Store <3>

PC = 36 | A = 2 | DM = [2, 3, 1, 2, 0, 0, 0, 0, 0, 0]
Load <1>

PC = 38 | A = 3 | DM = [2, 3, 1, 2, 0, 0, 0, 0, 0, 0]
Subt <2>

PC = 40 | A = 2 | DM = [2, 3, 1, 2, 0, 0, 0, 0, 0, 0]
Store <1>

PC = 42 | A = 2 | DM = [2, 2, 1, 2, 0, 0, 0, 0, 0, 0]
SkipZ <0>

PC = 44 | A = 2 | DM = [2, 2, 1, 2, 0, 0, 0, 0, 0, 0]
JMP <15>

PC = 30 | A = 2 | DM = [2, 2, 1, 2, 0, 0, 0, 0, 0, 0]
Load <3>

PC = 32 | A = 2 | DM = [2, 2, 1, 2, 0, 0, 0, 0, 0, 0]
Add <0>

PC = 34 | A = 4 | DM = [2, 2, 1, 2, 0, 0, 0, 0, 0, 0]
Store <3>

PC = 36 | A = 4 | DM = [2, 2, 1, 4, 0, 0, 0, 0, 0, 0]
Load <1>

PC = 38 | A = 2 | DM = [2, 2, 1, 4, 0, 0, 0, 0, 0, 0]
Subt <2>

PC = 40 | A = 1 | DM = [2, 2, 1, 4, 0, 0, 0, 0, 0, 0]
Store <1>

PC = 42 | A = 1 | DM = [2, 1, 1, 4, 0, 0, 0, 0, 0, 0]
SkipZ <0>

PC = 44 | A = 1 | DM = [2, 1, 1, 4, 0, 0, 0, 0, 0, 0]
JMP <15>

PC = 30 | A = 1 | DM = [2, 1, 1, 4, 0, 0, 0, 0, 0, 0]
Load <3>

PC = 32 | A = 4 | DM = [2, 1, 1, 4, 0, 0, 0, 0, 0, 0]
Add <0>

PC = 34 | A = 6 | DM = [2, 1, 1, 4, 0, 0, 0, 0, 0, 0]
Store <3>

PC = 36 | A = 6 | DM = [2, 1, 1, 6, 0, 0, 0, 0, 0, 0]
Load <1>

PC = 38 | A = 1 | DM = [2, 1, 1, 6, 0, 0, 0, 0, 0, 0]
Subt <2>

PC = 40 | A = 0 | DM = [2, 1, 1, 6, 0, 0, 0, 0, 0, 0]
Store <1>

PC = 42 | A = 0 | DM = [2, 0, 1, 6, 0, 0, 0, 0, 0, 0]
SkipZ <0>

PC = 46 | A = 0 | DM = [2, 0, 1, 6, 0, 0, 0, 0, 0, 0]
Load <3>

PC = 48 | A = 6 | DM = [2, 0, 1, 6, 0, 0, 0, 0, 0, 0]
Out <7>
Result is 6

PC = 50 | A = 6 | DM = [2, 0, 1, 6, 0, 0, 0, 0, 0, 0]
Halt <0>

End of program
